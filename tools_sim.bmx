'
' Example application stub generated by wxCodeGen v1.19 : 05 Mai 2015 13:50:44
'
SuperStrict

Framework wx.wxApp

Import "tools/sim/sim_base.bmx"
'Import "source/main.bmx"
'Incbin "source/version.txt"

Import "source/game.database.bmx"
Import "source/game.player.base.bmx"
Import "source/game.player.programmeplan.bmx"


'override data from main.bmx
'LOG_NAME = "log.tools_sim.profiler.txt"
TLogger.Log("CORE", "Starting Module ~qTVTTools: Sim~q.", LOG_INFO )


TLogger.SetPrintMode(0)

New MyApp.run()

Type MyApp Extends wxApp
	Field dbLoader:TDatabaseLoader
	Field _frameMain:MyFrame1

	Method OnInit:Int()
		TLocalization.LoadLanguageFiles("res/lang/lang_*.txt")
		'set default language
'		TLocalization.SetCurrentLanguage("en")
		TLocalization.SetCurrentLanguage("de")
		'select user language
		'TLocalization.SetCurrentLanguage(userlanguage)


		_frameMain = MyFrame1(New MyFrame1.Create(Null, -1, "Sim"))
		_frameMain.show()

		'load genre definitions
		local registryLoader:TRegistryLoader = new TRegistryLoader
		registryLoader.LoadFromXML("config/genres.xml", true)


		'load db
		dbLoader = New TDatabaseLoader
		dbLoader.LoadDir("res/database/Default")

		_frameMain.RecreateProgrammeLicenceList()
		_frameMain.RecreateAudiencesList()

		'hide block parts
		_frameMain.m_staticText_blockCount.Hide()
		_frameMain.m_staticText_block.Hide()
		_frameMain.m_spinCtrl_block.Hide()
		

		'create some players to work with (public image and so on)
		for local i:int = 1 to 4
			local p:TPlayerBase = new TPlayerBase
			p.name = "Spieler "+i
			p.channelname = "Sender "+i
			p.playerID = i

			TPublicImage.Create(p.playerID)
'			new TPlayerProgrammeCollection.Create(p.playerID)
'			new TPlayerProgrammePlan.Create(p.playerID)

			GetPlayerBaseCollection().Set(1, p)
		Next
	
		Return True
	End Method
End Type



Type MyFrame1 Extends MyFrame1Base
	Field programmeLicenceListColNames:string[] = ["Title", "Year", "Type", "Author"]
	Field activeProgrammeLicence:TProgrammeLicence


	Method OnInit()
		Super.OnInit()

		' Add own initialisation code here

	End Method


	'override
	Method OnProgrammeLicencesItemSelected(event:wxListEvent)
		local licence:TProgrammeLicence = TProgrammeLicence(m_listCtrl_programmeLicences.GetItemData( event.GetIndex() ))
		if not licence
			print "OnProgrammeLicenceLicencesItemSelected: no licence found"
		'skip collection and series headers
		elseif not licence.IsSeries() and not licence.IsCollection()
			'set active licence
			activeProgrammeLicence = licence

			m_spinCtrl_block.SetRange(1, licence.GetData().GetBlocks())
			m_staticText_blockCount.SetLabel( "/ " + licence.GetData().GetBlocks() )
			
			RunAudienceSimulation(licence)
		endif
	End Method


	Method OnProgrammeLicencesSize(event:wxSizeEvent)
		ResizeProgrammeLicenceList()
		ResizeAudiencesList()

		event.Skip()
	End Method


	Method OnChangeSettings(event:wxCommandEvent)
		if activeProgrammeLicence
			RunAudienceSimulation(activeProgrammeLicence)
		endif
	End Method





	Method ResizeAudiencesList()
		if m_listCtrl_audiences.GetColumnCount() >= TVTTargetGroup.count + 1 + 1
			local w:int, h:int
			m_listCtrl_audiences.GetClientSize(w, h)
			local wLeft:int = w - 35
			local wGroup:Int = Floor(wLeft/(TVTTargetGroup.count+1))
			m_listCtrl_audiences.SetColumnWidth(0, 35)
			For local i:int = 0 to TVTTargetGroup.count
				m_listCtrl_audiences.SetColumnWidth(i+1, wGroup)
			Next
		endif
	End Method


	Method RecreateAudiencesList()
		local list:wxListCtrl = m_listCtrl_audiences
		list.DeleteAllItems()
		list.InsertColumn(0, "Uhr")
		For local i:int = 0 to TVTTargetGroup.count '0-9
			list.InsertColumn(i+1, GetLocale("TARGETGROUP_"+TVTTargetGroup.GetAsString(TVTTargetGroup.GetAtIndex(i))) )
		Next
		' To speed up inserting we hide the control temporarily
		list.Hide()

		For local clock:int = 0 to 23
			list.InsertStringItem(clock, clock)
			For local i:int = 0 to TVTTargetGroup.count '0-9
				list.SetStringItem(clock, i+1, 0)
			Next
			'store empty audience...
			list.SetItemData(clock, null)
		Next

		list.Show()
	End Method


	Method ResizeProgrammeLicenceList()
		if m_listCtrl_programmeLicences.GetColumnCount() >= 4
			local w:int, h:int
			m_listCtrl_programmeLicences.GetClientSize(w, h)
			local wLeft:int = w - 80 - 80 - 100 - 20 '-20 is margin etc
			m_listCtrl_programmeLicences.SetColumnWidth(0, wLeft)
			m_listCtrl_programmeLicences.SetColumnWidth(1, 80)
			m_listCtrl_programmeLicences.SetColumnWidth(2, 80)
			m_listCtrl_programmeLicences.SetColumnWidth(3, 100)
'			print w
			'TODO: On Maximize followed by Minimize the "onSize" is not
			'      called
		endif
	End Method


	Method RecreateProgrammeLicenceList()
		local list:wxListCtrl = m_listCtrl_programmeLicences
		list.DeleteAllItems()
		list.InsertColumn(0, programmeLicenceListColNames[0])
		list.InsertColumn(1, programmeLicenceListColNames[1], wxLIST_FORMAT_RIGHT)
		list.InsertColumn(2, programmeLicenceListColNames[2], wxLIST_FORMAT_RIGHT)
		list.InsertColumn(3, programmeLicenceListColNames[3], wxLIST_FORMAT_RIGHT)
		' To speed up inserting we hide the control temporarily
		list.Hide()

		local entryNum:int = 0
		For Local l:TProgrammeLicence = EachIn GetProgrammeLicenceCollection().licences
			if l.isEpisode()
				list.InsertStringItem(entryNum, "- "+l.GetTitle())
			else
				list.InsertStringItem(entryNum, l.GetTitle())
			endif
			list.SetStringItem(entryNum, 1, l.GetData().year )
			list.SetStringItem(entryNum, 2, TVTProgrammeLicenceType.GetAsString(l.licenceType) )
			list.SetStringItem(entryNum, 3, l.GetData().createdBy )
			'maybe we could just store the GUID here?
			'or something which does NOT change at all? 
			list.SetItemData(entryNum, l)

			entryNum :+ 1
		Next

		list.Show()
	End Method


	Method RunAudienceSimulation:Int(licence:TProgrammeLicence)
		local player:int = 1
		local audience:int = Max(0, m_spinCtrl_audience.GetValue())
		local block:int = Min(licence.GetData().GetBlocks(), Max(1, m_spinCtrl_block.GetValue()))
		local day:int = 1
		local hour:int = 1
		local year:int = m_spinCtrl_gameYear.GetValue()

		'adjust game time
'		print GetWorldTime().GetFormattedDay()
		GetWorldTime().SetStartYear(year)
'		GetWorldTime().SetTimeGone( GetWorldTime().MakeTime(year, day, hour. 0, 0) )
'		print GetWorldTime().GetFormattedDay() + "  " + GetWorldTime().GetYear()

		'create market ("buy a generic station")
		Local market:TAudienceMarketCalculation = New TAudienceMarketCalculation
		market.maxAudience = TAudience.CreateWithBreakdown(audience)
		'no competitors, only our player
		market.AddPlayer(player)


		'create programme
		local p:TProgramme = TProgramme.Create(licence)
		p.owner = player
		
		'broadcast any previous programme "before"
		Local bc:TBroadcast = new TBroadcast
		bc.AudienceMarkets.AddLast(market)
		bc.broadcastType = TBroadcastMaterial.TYPE_PROGRAMME

rem
		Local bcNews:TBroadcast = new TBroadcast
		bcNews.AudienceMarkets.AddLast(market)
		bcNews.broadcastType = TBroadcastMaterial.TYPE_NEWSSHOW

		For local i:int = 1 to block
			'set the block we send
			p.currentBlockBroadcasting = i

			local newsShow:TNewsShow = TNewsShow.Create("News", player, null, null, null)
			GetBroadcastManager().SetCurrentBroadcastMaterial(player, p, TBroadcastMaterial.TYPE_NEWSSHOW)
			GetBroadcastManager().BroadcastNewsShow(day, hour-i+1, 0)

			'broadcast it
			GetBroadcastManager().SetCurrentBroadcastMaterial(player, p, TBroadcastMaterial.TYPE_PROGRAMME)
			GetBroadcastManager().BroadcastProgramme(day, hour-i+1, 0, bc)
		Next
endrem
		'set the block we send
		p.currentBlockBroadcasting = block

		'broadcast it
		GetBroadcastManager().SetCurrentBroadcastMaterial(player, p, TBroadcastMaterial.TYPE_PROGRAMME)
		GetBroadcastManager().BroadcastProgramme(day, hour, 0, bc)

		'fetch audience for our player
		For local hour:int = 0 to 23
			GetBroadcastManager().BroadcastProgramme(day, hour, 0, bc)
			Local audienceResult:TAudienceResult = GetBroadcastManager().GetAudienceResult(player)
			'local potentialQuote:TAudience = audienceResult.GetAudienceQuote()

			'we assume all rows are created already

			For local i:int = 0 to TVTTargetGroup.count
				local s:string = int(audienceResult.audience.GetValue( TVTTargetGroup.GetAtIndex(i) ))
				's :+ " ("+ int(100*potentialQuote.GetValue( TVTTargetGroup.GetAtIndex(i) ))+"%)"
				m_listCtrl_audiences.SetStringItem(hour, i+1, s )
			Next
		Next
	End Method

End Type

