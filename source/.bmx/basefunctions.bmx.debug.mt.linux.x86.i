import brl.blitz
import brl.pngloader
import "basefunctions_zip.bmx"
import "basefunctions_lists.bmx"
import "basefunctions_localization.bmx"
import "basefunctions_text.bmx"
import "basefunctions_keymanager.bmx"
import brl.reflection
import "basefunctions_loadsave.bmx"
SeedRand%(seed%)="SeedRand"
Rand32%()="Rand32"
RandMax%(hi%)="RandMax"
RandRange%(lo%,hi%)="RandRange"
DEBUG_ALL@=128
DEBUG_SAVELOAD@=64
DEBUG_NO@=0
DEBUG_NETWORK@=32
DEBUG_XML@=16
DEBUG_LUA@=8
DEBUG_LOADING@=4
DEBUG_UPDATES@=2
DEBUG_NEWS@=1
DEBUG_START@=3
DEBUG_IMAGES@=5
PrintDebug%(functiontext$=$"",message$,Debug@)="bb_PrintDebug"
SortListArray%(List:brl.linkedlist.TList Var)="bb_SortListArray"
TNumberCurveValue^brl.blitz.Object{
._value%&
-New%()="_bb_TNumberCurveValue_New"
+Create:TNumberCurveValue(number%=0)="_bb_TNumberCurveValue_Create"
}="bb_TNumberCurveValue"
TNumberCurve^brl.blitz.Object{
._values:brl.linkedlist.TList&[]&
._ratio#&[]&
._amount%&
-New%()="_bb_TNumberCurve_New"
+Create:TNumberCurve(curves%=1,amount%=0)="_bb_TNumberCurve_Create"
-SetCurveRatio%(curve%=1,ratio#=1#)="_bb_TNumberCurve_SetCurveRatio"
-AddNumber%(curve%=1,number%=0)="_bb_TNumberCurve_AddNumber"
-Draw%(x#,y#,w#,h#)="_bb_TNumberCurve_Draw"
}="bb_TNumberCurve"
TPosition^brl.blitz.Object{
.x#&
.y#&
-New%()="_bb_TPosition_New"
+Create:TPosition(_x#=0#,_y#=0#)="_bb_TPosition_Create"
-SetX%(_x#)="_bb_TPosition_SetX"
-SetY%(_y#)="_bb_TPosition_SetY"
-SetXY%(_x#,_y#)="_bb_TPosition_SetXY"
-SetPos%(otherPos:TPosition)="_bb_TPosition_SetPos"
+SwitchPos%(Pos:TPosition Var,otherPos:TPosition Var)="_bb_TPosition_SwitchPos"
-Save%()="_bb_TPosition_Save"
+Load:TPosition(pnode:xmlNode)="_bb_TPosition_Load"
}="bb_TPosition"
ARGB_Alpha%(ARGB%)="bb_ARGB_Alpha"
ARGB_Red%(ARGB%)="bb_ARGB_Red"
ARGB_Green%(ARGB%)="bb_ARGB_Green"
ARGB_Blue%(ARGB%)="bb_ARGB_Blue"
ARGB_Color%(alpha%,red%,green%,blue%)="bb_ARGB_Color"
isMonochrome%(argb%)="bb_isMonochrome"
TStringHelper^brl.blitz.Object{
-New%()="_bb_TStringHelper_New"
+FirstPart$(txt$,trenn@=32)="_bb_TStringHelper_FirstPart"
+LastPart$(txt$,trenn@=32)="_bb_TStringHelper_LastPart"
+gparam$(txt$,Count%,trenn@=32)="_bb_TStringHelper_gparam"
}="bb_TStringHelper"
Clamp#(value#,minvalue#=0#,maxvalue#=1#)="bb_Clamp"
WriteStringWithLen%(str$,stream:brl.stream.TStream)="bb_WriteStringWithLen"
Stream_SeekString%(str$,stream:brl.stream.TStream)="bb_Stream_SeekString"
SortListFast%(list:brl.linkedlist.TList)="bb_SortListFast"
StringSplit$&[](text$,Separator$,MaxLength%=0)="bb_StringSplit"
SaveScreenshot%()="bb_SaveScreenshot"
RequestFromUrl$(myurl$)="bb_RequestFromUrl"
TLength^brl.blitz.Object{
.time%&
-New%()="_bb_TLength_New"
}="bb_TLength"
TCall^brl.blitz.Object{
.name$&
.start%&
.Times:brl.linkedlist.TList&
.calls%&
-New%()="_bb_TCall_New"
}="bb_TCall"
TLogFile^brl.blitz.Object{
activated@&=mem:b("_bb_TLogFile_activated")
Strings:brl.linkedlist.TList&=mem:p("_bb_TLogFile_Strings")
-New%()="_bb_TLogFile_New"
+DumpLog%(file$,doPrint%=1)="_bb_TLogFile_DumpLog"
+AddLog%(MyText$)="_bb_TLogFile_AddLog"
}="bb_TLogFile"
TProfiler^brl.blitz.Object{
activated@&=mem:b("_bb_TProfiler_activated")
calls:brl.linkedlist.TList&=mem:p("_bb_TProfiler_calls")
-New%()="_bb_TProfiler_New"
+DumpLog%(file$)="_bb_TProfiler_DumpLog"
+Enter%(func$)="_bb_TProfiler_Enter"
+Leave%(func$)="_bb_TProfiler_Leave"
}="bb_TProfiler"
TFunctions^brl.blitz.Object{
-New%()="_bb_TFunctions_New"
+IsIn%(x#,y#,rectx#,recty#,rectw#,recth#)="_bb_TFunctions_IsIn"
+ListDir$(dir$,onlyExtension$=$"",out$=$"")="_bb_TFunctions_ListDir"
+convertValue$(value$,nachkomma%,typ%)="_bb_TFunctions_convertValue"
+convertPercent$(value$,nachkomma%)="_bb_TFunctions_convertPercent"
+DrawTextWithBG%(value$,x%,y%,bgAlpha#=0.5#,bgCol%=0)="_bb_TFunctions_DrawTextWithBG"
+BlockText%(txt$,x#,y#,width#,height#,align%=0,_font:brl.max2d.TImageFont="bbNullObject",colR%=0,colG%=0,colB%=0,NoLineBreak@=0,doDraw%=1)="_bb_TFunctions_BlockText"
}="bb_TFunctions"
TDragAndDrop^brl.blitz.Object{
List:brl.linkedlist.TList&=mem:p("_bb_TDragAndDrop_List")
.rectx%&
.recty%&
.rectw%&
.recth%&
.typ$&
.slot%&
.used%&
-New%()="_bb_TDragAndDrop_New"
-SetDragAndDropTargetUnused%()="_bb_TDragAndDrop_SetDragAndDropTargetUnused"
-SetDragAndDropTargetUsed%()="_bb_TDragAndDrop_SetDragAndDropTargetUsed"
+FindAndSetDragAndDropTargetUsed%(List:brl.linkedlist.TList,_x%,_y%)="_bb_TDragAndDrop_FindAndSetDragAndDropTargetUsed"
+FindAndSetDragAndDropTargetUnUsed%(List:brl.linkedlist.TList,_x%,_y%)="_bb_TDragAndDrop_FindAndSetDragAndDropTargetUnUsed"
+FindDragAndDropObject:TDragAndDrop(List:brl.linkedlist.TList,_x%,_y%)="_bb_TDragAndDrop_FindDragAndDropObject"
+Create:TDragAndDrop(x%,y%,w%,h%,_typ$=$"")="_bb_TDragAndDrop_Create"
-IsIn%(x%,y%)="_bb_TDragAndDrop_IsIn"
-CanDrop%(x%,y%,_Typ$=$"")="_bb_TDragAndDrop_CanDrop"
-Drop%(x%,y%,_typ$=$"")="_bb_TDragAndDrop_Drop"
-DrawMe%()="_bb_TDragAndDrop_DrawMe"
}="bb_TDragAndDrop"
TPlayerColor^brl.blitz.Object{
List:brl.linkedlist.TList&=mem:p("_bb_TPlayerColor_List")
.colR%&
.colG%&
.colB%&
.color%&
.used@&
-New%()="_bb_TPlayerColor_New"
+GetColor:TPlayerColor(colR%,colG%,colB%)="_bb_TPlayerColor_GetColor"
-GetUnusedColor:TPlayerColor(playerID%)="_bb_TPlayerColor_GetUnusedColor"
+Create:TPlayerColor(r%=0,g%=0,b%=0,used@=0)="_bb_TPlayerColor_Create"
-MySetColor%()="_bb_TPlayerColor_MySetColor"
}="bb_TPlayerColor"
appKubSpline^brl.blitz.Object{
.dataX#&[]&
.dataY#&[]&
.dataCount%&
.koeffB#&[]&
.koeffC#&[]&
.koeffD#&[]&
-New%()="_bb_appKubSpline_New"
-GetData%(x#&[],y#&[])="_bb_appKubSpline_GetData"
-GetDataInt%(x%&[],y%&[])="_bb_appKubSpline_GetDataInt"
-value#(x#)="_bb_appKubSpline_value"
-ValueInt%(x#)="_bb_appKubSpline_ValueInt"
}="bb_appKubSpline"
Tparticle^brl.blitz.Object{
.x#&
.y#&
.xrange%&
.yrange%&
.vel#&
.angle#&
.image:brl.max2d.TImage&
.life%&
.is_alive%&
.alpha#&
.scale#&
.pred%&
.pgreen%&
.pblue%&
-New%()="_bb_Tparticle_New"
-Spawn%(px#,py#,pvel#,plife#,pscale#,pangle#,pxrange#,pyrange#)="_bb_Tparticle_Spawn"
-Update%()="_bb_Tparticle_Update"
-Draw%()="_bb_Tparticle_Draw"
}="bb_Tparticle"
LastSeekPos%&=mem("bb_LastSeekPos")
functions:TFunctions&=mem:p("bb_functions")
